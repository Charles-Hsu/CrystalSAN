#  testXML.exp
#  
#
#  Created by Charles Hsu on 1/27/13.
#
#####################
#include public.exp
#####################
#source [file join [file dirname [info script]] xml.exp]

proc xml2list xml {
    regsub -all {>\s*<} [string trim $xml " \n\t<>"] "\} \{" xml
    set xml [string map {> "\} \{#text \{" < "\}\} \{"}  $xml]
    
    set res ""   ;# string to collect the result
    set stack {} ;# track open tags
    set rest {}
    foreach item "{$xml}" {
        switch -regexp -- $item {
            ^# {append res "{[lrange $item 0 end]} " ; #text item}
            ^/ {
                regexp {/(.+)} $item -> tagname ;# end tag
                set expected [lindex $stack end]
                if {$tagname!=$expected} {error "$item != $expected"}
                set stack [lrange $stack 0 end-1]
                append res "\}\} "
            }
            /$ { # singleton - start and end in one <> group
                regexp {([^ ]+)( (.+))?/$} $item -> tagname - rest
                set rest [lrange [string map {= " "} $rest] 0 end]
                append res "{$tagname [list $rest] {}} "
            }
            default {
                set tagname [lindex $item 0] ;# start tag
                set rest [lrange [string map {= " "} $item] 1 end]
                lappend stack $tagname
                append res "\{$tagname [list $rest] \{"
            }
        }
        if {[llength $rest]%2} {error "att's not paired: $rest"}
    }
    if [llength $stack] {error "unresolved: $stack"}
    string map {"\} \}" "\}\}"} [lindex $res 0]
}

proc list2xml list {
    switch -- [llength $list] {
        2 {lindex $list 1}
        3 {
            foreach {tag attributes children} $list break
            set res <$tag
            foreach {name value} $attributes {
                append res " $name=\"$value\""
            }
            if [llength $children] {
                append res >
                foreach child $children {
                    append res [list2xml $child]
                }
                append res </$tag>
            } else {append res />}
        }
        default {error "could not parse $list"}
    }
}
#-------------------------------------------- now testing:
set test {<foo a="b">bar and<grill x:c="d" e="f g"><baz x="y"/></grill><room/></foo>}

set filename [lindex $argv 0]
set fp [open $filename r]
set file_data [read $fp]
close $fp

proc tdomlist x {[[dom parse $x] documentElement root] asList} ;# reference
proc lequal {a b} {
    if {[llength $a] != [llength $b]} {return 0}
    if {[lindex $a 0] == $a} {return [string equal $a $b]}
    foreach i $a j $b {if {![lequal $i $j]} {return 0}}
    return 1
}
proc try x {
    puts [set a [tdomlist $x]]
    puts [set b [xml2list $x]]
    puts list:[lequal $a $b],string:[string equal $a $b]
}

set a [lindex [list a b "Hello World"] 2]
puts $a

#set res [xml2list $test]
#puts $file_data
set site_data [lindex [xml2list $file_data] 2]
set site_name [lindex [lindex $site_data 0] 1]
set engines_data [lindex [lindex $site_data 0] 2]
puts $site_name
puts [lindex [lindex $engines_data 0] 1]

#engine_name
set engine_name        [lindex [lindex [lindex [lindex $engines_data 0] 2] 0] 1] 
puts $engine_name

set engine_info [lindex [lindex [lindex [lindex $engines_data 0] 2] 0] 2]

#cli_vpd
set cli_vpd_section    [lindex $engine_info 0]
puts $cli_vpd_section

puts "-------------"

#cli_mirror
set cli_mirror_section [lindex $engine_info 1]
puts $cli_mirror_section

puts "-------------"

set cli_conmgr_drive_status [lindex $engine_info 2]
puts $cli_conmgr_drive_status

puts "-------------"

set cli_conmgr_engine_status [lindex $engine_info 3]
puts $cli_conmgr_engine_status

puts "-------------"

set cli_conmgr_initiator_status [lindex $engine_info 4]
puts $cli_conmgr_initiator_status

puts "-------------"

set cli_rebuild [lindex $engine_info 5]
puts $cli_rebuild

puts "-------------"

set cli_rebuild_delay [lindex $engine_info 6]
puts $cli_rebuild_delay

puts "-------------"

set cli_rebuild_default [lindex $engine_info 7]
puts $cli_rebuild_default

puts "-------------"

set cli_rtc [lindex $engine_info 8]
puts $cli_rtc

puts "-------------"

set cli_history [lindex $engine_info 9]
puts $cli_history

puts "-------------"

set cli_failed [lindex $engine_info 10]
puts $cli_failed

puts "-------------"

set cli_detach [lindex $engine_info 11]
puts $cli_detach

puts "-------------"

set cli_timeout [lindex $engine_info 12]
puts $cli_timeout

puts "-------------"

set cli_port [lindex $engine_info 13]
puts $cli_port

puts "-------------"

set cli_detach_group [lindex $engine_info 14]
puts $cli_detach_group

puts "-------------"

set cli_dmeprop [lindex $engine_info 15]
puts $cli_dmeprop

puts "-------------"

set cli_map [lindex $engine_info 16]
puts $cli_map









